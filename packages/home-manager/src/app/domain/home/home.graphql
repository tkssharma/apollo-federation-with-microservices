scalar Date
scalar Upload

extend type File @key(fields: "id") {
  id: ID! @external
}

type Home @key (fields: "id"){
    id: ID!
    name: String!
    locality: HomeLocality
    facilities: [HomeFacility!]
    user: User
    description: String!
	  display_images: File!
	  original_images: File!
    is_active: Boolean!
    created_at: Date
    updated_at: Date
}

extend type User @key(fields: "id") {
  id: ID! @external
}

type Query {
    homes: [Home!]
    home(id: ID): Home!
    findHomes(name: String!): [Home!]
    activeHomes: [Home!]
}
input HomeInput {
  name: String!
  description: String!
  is_active: Boolean!
}

type uploadRes {
  id : Float!
}

type Mutation {
    createHome(payload: HomeInput!): Home
    updateHome(id: ID!, payload: HomeInput!): Home
}